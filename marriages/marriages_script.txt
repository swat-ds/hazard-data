[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Event",
          "expression": "value",
          "columnName": "Event",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "m",
                "l": "m"
              }
            },
            {
              "v": {
                "v": "rmt",
                "l": "rmt"
              }
            },
            {
              "v": {
                "v": "rm",
                "l": "rm"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "Note",
    "expression": "grel:value.split(/(A-Z)/)[0].split(/[?.]/)[0].split(\"dt\")[0]",
    "onError": "set-to-blank",
    "newColumnName": "TEST",
    "columnInsertIndex": 4,
    "description": "Create column TEST at index 4 based on column Note using expression grel:value.split(/(A-Z)/)[0].split(/[?.]/)[0].split(\"dt\")[0]"
  },
  {
    "op": "core/column-removal",
    "columnName": "TEST",
    "description": "Remove column TEST"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Event",
          "expression": "value",
          "columnName": "Event",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "m",
                "l": "m"
              }
            },
            {
              "v": {
                "v": "rmt",
                "l": "rmt"
              }
            },
            {
              "v": {
                "v": "rm",
                "l": "rm"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "Note",
    "expression": "grel:value.find(/( ?[A-Z]\\S*)+(?= dt)/)[0].trim()",
    "onError": "set-to-blank",
    "newColumnName": "Spouse",
    "columnInsertIndex": 4,
    "description": "Create column Spouse at index 4 based on column Note using expression grel:value.find(/( ?[A-Z]\\S*)+(?= dt)/)[0].trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Event",
          "expression": "value",
          "columnName": "Event",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "m",
                "l": "m"
              }
            },
            {
              "v": {
                "v": "rmt",
                "l": "rmt"
              }
            },
            {
              "v": {
                "v": "rm",
                "l": "rm"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "ID",
    "expression": "grel:random()",
    "onError": "set-to-blank",
    "newColumnName": "sort",
    "columnInsertIndex": 1,
    "description": "Create column sort at index 1 based on column ID using expression grel:random()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Event",
          "expression": "value",
          "columnName": "Event",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "m",
                "l": "m"
              }
            },
            {
              "v": {
                "v": "rmt",
                "l": "rmt"
              }
            },
            {
              "v": {
                "v": "rm",
                "l": "rm"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "Spouse",
          "expression": "isBlank(value)",
          "columnName": "Spouse",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "sort",
    "expression": "grel:random()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sort using expression grel:random()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Event",
          "expression": "value",
          "columnName": "Event",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "m",
                "l": "m"
              }
            },
            {
              "v": {
                "v": "rmt",
                "l": "rmt"
              }
            },
            {
              "v": {
                "v": "rm",
                "l": "rm"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "Spouse",
          "expression": "isBlank(value)",
          "columnName": "Spouse",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "sort",
    "expression": "grel:random()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sort using expression grel:random()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Spouse",
          "expression": "isBlank(value)",
          "columnName": "Spouse",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "Note",
          "columnName": "Note",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "Event",
          "columnName": "Event",
          "query": "[to m]",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "sort",
    "expression": "grel:random()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sort using expression grel:random()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "Note",
          "columnName": "Note",
          "query": "\\bdec",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "Event",
          "columnName": "Event",
          "query": "[to m]",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "Note",
    "expression": "grel:value.split(\"  S of\")[1].split(\"  \")[0].split(' & ')[1].contains(/\\bdec\\b/)",
    "onError": "set-to-blank",
    "newColumnName": "S1 mother deceased",
    "columnInsertIndex": 5,
    "description": "Create column S1 mother deceased at index 5 based on column Note using expression grel:value.split(\"  S of\")[1].split(\"  \")[0].split(' & ')[1].contains(/\\bdec\\b/)"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "Note",
          "columnName": "Note",
          "query": "\\bdec",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "Event",
          "columnName": "Event",
          "query": "[to m]",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "Note",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Groom's parents",
    "columnInsertIndex": 5,
    "description": "Create column Groom's parents at index 5 based on column Note using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "Note",
          "columnName": "Note",
          "query": "\\bdec",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "Event",
          "columnName": "Event",
          "query": "[to m]",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Groom's parents",
    "expression": "grel:value.split(\"  S of\")[1].split(\"  \")[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Groom's parents using expression grel:value.split(\"  S of\")[1].split(\"  \")[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "Note",
          "columnName": "Note",
          "query": "\\bdec",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "Event",
          "columnName": "Event",
          "query": "[to m]",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "Groom's parents",
    "expression": "grel:value.split(' & ')[0].contains(/\\bdec\\b/)",
    "onError": "set-to-blank",
    "newColumnName": "S1 father deceased",
    "columnInsertIndex": 6,
    "description": "Create column S1 father deceased at index 6 based on column Groom's parents using expression grel:value.split(' & ')[0].contains(/\\bdec\\b/)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "Note",
          "columnName": "Note",
          "query": "\\bdec",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "Event",
          "columnName": "Event",
          "query": "[to m]",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        },
        {
          "type": "list",
          "name": "S1 father deceased",
          "expression": "value",
          "columnName": "S1 father deceased",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "S1 father deceased",
    "expression": "grel:cells[\"Groom's parents\"].value.contains('both dec')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column S1 father deceased using expression grel:cells[\"Groom's parents\"].value.contains('both dec')"
  }
]